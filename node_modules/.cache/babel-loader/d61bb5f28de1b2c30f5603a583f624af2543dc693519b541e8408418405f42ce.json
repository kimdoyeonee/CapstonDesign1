{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialNumParser = void 0;\nconst PARSERS = [/USB\\\\(?:.+)\\\\(.+)/, /FTDIBUS\\\\(?:.+)\\+(.+?)A?\\\\.+/];\nconst serialNumParser = pnpId => {\n  if (!pnpId) {\n    return null;\n  }\n  for (const parser of PARSERS) {\n    const sn = pnpId.match(parser);\n    if (sn) {\n      return sn[1];\n    }\n  }\n  return null;\n};\nexports.serialNumParser = serialNumParser;","map":{"version":3,"names":["Object","defineProperty","exports","value","serialNumParser","PARSERS","pnpId","parser","sn","match"],"sources":["/Users/kimdoyeon/Desktop/CapstonDesign1/node_modules/@serialport/bindings-cpp/dist/win32-sn-parser.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serialNumParser = void 0;\nconst PARSERS = [/USB\\\\(?:.+)\\\\(.+)/, /FTDIBUS\\\\(?:.+)\\+(.+?)A?\\\\.+/];\nconst serialNumParser = (pnpId) => {\n    if (!pnpId) {\n        return null;\n    }\n    for (const parser of PARSERS) {\n        const sn = pnpId.match(parser);\n        if (sn) {\n            return sn[1];\n        }\n    }\n    return null;\n};\nexports.serialNumParser = serialNumParser;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMC,OAAO,GAAG,CAAC,mBAAmB,EAAE,8BAA8B,CAAC;AACrE,MAAMD,eAAe,GAAIE,KAAK,IAAK;EAC/B,IAAI,CAACA,KAAK,EAAE;IACR,OAAO,IAAI;EACf;EACA,KAAK,MAAMC,MAAM,IAAIF,OAAO,EAAE;IAC1B,MAAMG,EAAE,GAAGF,KAAK,CAACG,KAAK,CAACF,MAAM,CAAC;IAC9B,IAAIC,EAAE,EAAE;MACJ,OAAOA,EAAE,CAAC,CAAC,CAAC;IAChB;EACJ;EACA,OAAO,IAAI;AACf,CAAC;AACDN,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}