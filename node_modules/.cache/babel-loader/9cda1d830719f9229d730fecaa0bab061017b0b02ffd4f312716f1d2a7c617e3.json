{"ast":null,"code":"var _jsxFileName = \"/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const [exerciseData, setExerciseData] = useState([]);\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [{\n      time: \"2022-05-01T10:00:00\",\n      duration: 60\n    }, {\n      time: \"2022-05-02T10:00:00\",\n      duration: 40\n    }, {\n      time: \"2022-05-03T10:00:00\",\n      duration: 30\n    }, {\n      time: \"2022-05-04T10:00:00\",\n      duration: 50\n    }];\n    return tempData;\n  };\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  useEffect(() => {\n    // exerciseData가 변경될 때마다 실행되는 useEffect\n    if (exerciseData.length > 0) {\n      const ctx = document.getElementById(\"exerciseChart\");\n      if (ctx) {\n        const chart = new Chart(ctx, {\n          type: \"line\",\n          data: {\n            labels: exerciseData.map(data => data.time),\n            datasets: [{\n              label: \"운동 시간 (분)\",\n              data: exerciseData.map(data => data.duration),\n              fill: false,\n              borderColor: \"rgb(75, 192, 192)\",\n              tension: 0.1\n            }]\n          },\n          options: {\n            scales: {\n              x: {\n                type: \"time\",\n                time: {\n                  unit: \"day\",\n                  displayFormats: {\n                    day: \"MM-dd\" // 날짜 형식 수정 (월-일)\n                  }\n                },\n                title: {\n                  display: true,\n                  text: \"날짜\"\n                }\n              },\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: \"운동 시간 (분)\"\n                }\n              }\n            }\n          }\n        });\n\n        // 컴포넌트가 언마운트될 때 차트를 정리하는 함수 반환\n        return () => {\n          chart.destroy();\n        };\n      }\n    }\n  }, [exerciseData]); // exerciseData가 변경될 때마다 실행\n\n  const calculateAchievementPercentage = () => {\n    const totalExerciseMinutes = exerciseData.reduce((acc, cur) => acc + cur.duration, 0);\n    const targetMinutes = 200; // 새로운 임의의 목표 시간 (예: 200분)\n    const percentage = totalExerciseMinutes / targetMinutes * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignupFormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC6B4\\uB3D9 \\uB370\\uC774\\uD130 \\uC870\\uD68C \\uBC0F \\uADF8\\uB798\\uD504\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: exerciseImage,\n          alt: \"exercise\",\n          style: {\n            width: 100,\n            marginRight: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), exerciseData.length > 0 ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"exerciseChart\",\n          width: 400,\n          height: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), exerciseData.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 20\n        },\n        children: [\"\\uBAA9\\uD45C \\uB2EC\\uC131\\uB960: \", calculateAchievementPercentage(), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"YU0lFXwvIW+aCQZeTUbfAUf7l0Q=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useEffect","Container","SignupFormContainer","Title","Chart","exerciseImage","jsxDEV","_jsxDEV","Exercise","_s","exerciseData","setExerciseData","fetchData","tempData","time","duration","fetchExerciseData","response","error","console","length","ctx","document","getElementById","chart","type","data","labels","map","datasets","label","fill","borderColor","tension","options","scales","x","unit","displayFormats","day","title","display","text","y","beginAtZero","destroy","calculateAchievementPercentage","totalExerciseMinutes","reduce","acc","cur","targetMinutes","percentage","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","alignItems","src","alt","width","marginRight","id","height","marginTop","_c","$RefreshReg$"],"sources":["/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\n\nconst Exercise = () => {\n  const [exerciseData, setExerciseData] = useState([]);\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [\n      { time: \"2022-05-01T10:00:00\", duration: 60 },\n      { time: \"2022-05-02T10:00:00\", duration: 40 },\n      { time: \"2022-05-03T10:00:00\", duration: 30 },\n      { time: \"2022-05-04T10:00:00\", duration: 50 },\n    ];\n    return tempData;\n  };\n\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  useEffect(() => {\n    // exerciseData가 변경될 때마다 실행되는 useEffect\n    if (exerciseData.length > 0) {\n      const ctx = document.getElementById(\"exerciseChart\");\n\n      if (ctx) {\n        const chart = new Chart(ctx, {\n          type: \"line\",\n          data: {\n            labels: exerciseData.map((data) => data.time),\n            datasets: [{\n              label: \"운동 시간 (분)\",\n              data: exerciseData.map((data) => data.duration),\n              fill: false,\n              borderColor: \"rgb(75, 192, 192)\",\n              tension: 0.1,\n            }],\n          },\n          options: {\n            scales: {\n              x: {\n                type: \"time\",\n                time: {\n                  unit: \"day\",\n                  displayFormats: {\n                    day: \"MM-dd\", // 날짜 형식 수정 (월-일)\n                  },\n                },\n                title: {\n                  display: true,\n                  text: \"날짜\",\n                },\n              },\n              y: {\n                beginAtZero: true,\n                title: {\n                  display: true,\n                  text: \"운동 시간 (분)\",\n                },\n              },\n            },\n          },\n        });\n\n        // 컴포넌트가 언마운트될 때 차트를 정리하는 함수 반환\n        return () => {\n          chart.destroy();\n        };\n      }\n    }\n  }, [exerciseData]); // exerciseData가 변경될 때마다 실행\n\n  const calculateAchievementPercentage = () => {\n    const totalExerciseMinutes = exerciseData.reduce((acc, cur) => acc + cur.duration, 0);\n    const targetMinutes = 200; // 새로운 임의의 목표 시간 (예: 200분)\n    const percentage = (totalExerciseMinutes / targetMinutes) * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n\n  return (\n    <Container>\n      <SignupFormContainer>\n        <Title>운동 데이터 조회 및 그래프</Title>\n        <div style={{ display: \"flex\", alignItems: \"center\"}}>\n          <img src={exerciseImage} alt=\"exercise\" style={{ width: 100, marginRight: 5 }} />\n          {exerciseData.length > 0 ? (\n            <canvas id=\"exerciseChart\" width={400} height={200}></canvas>\n          ) : (\n            <p>데이터를 불러오는 중...</p>\n          )}\n        </div>\n        {/* 목표 달성률 표시 코드 (그래프 아래에 표시) */}\n        {exerciseData.length > 0 && (\n          <p style={{ marginTop: 20 }}>목표 달성률: {calculateAchievementPercentage()}%</p>\n        )}\n      </SignupFormContainer>\n    </Container>\n  );\n};\n\nexport default Exercise;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}