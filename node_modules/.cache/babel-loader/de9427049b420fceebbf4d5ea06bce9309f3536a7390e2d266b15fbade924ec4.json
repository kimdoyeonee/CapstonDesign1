{"ast":null,"code":"var _jsxFileName = \"/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const [exerciseData, setExerciseData] = useState([]);\n  const [totalCalories, setTotalCalories] = useState(0); // 총 칼로리\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [{\n      time: \"2022-05-01T10:00:00\",\n      duration: 60,\n      calories: 150\n    }, {\n      time: \"2022-05-02T10:00:00\",\n      duration: 40,\n      calories: 100\n    }, {\n      time: \"2022-05-03T10:00:00\",\n      duration: 30,\n      calories: 75\n    }, {\n      time: \"2022-05-04T10:00:00\",\n      duration: 50,\n      calories: 125\n    }];\n    return tempData;\n  };\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n\n        // 칼로리 합계 계산\n        const total = response.reduce((acc, cur) => acc + cur.calories, 0);\n        setTotalCalories(total);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  const calculateAchievementPercentage = () => {\n    const targetCalories = 1000; // 목표 칼로리 (임시)\n    const percentage = totalCalories / targetCalories * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignupFormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"270px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: exerciseImage,\n          alt: \"exercise\",\n          style: {\n            width: 70,\n            marginRight: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), exerciseData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300,\n            height: 150\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: {\n              labels: exerciseData.map(data => data.time),\n              datasets: [{\n                label: \"운동 시간 (분)\",\n                data: exerciseData.map(data => data.duration),\n                fill: false,\n                borderColor: \"rgb(75, 192, 192)\",\n                tension: 0.1\n              }]\n            },\n            options: {\n              scales: {\n                x: {\n                  type: \"time\",\n                  time: {\n                    unit: \"day\",\n                    displayFormats: {\n                      day: \"MM-dd\" // 날짜 형식 수정 (월-일)\n                    }\n                  },\n                  title: {\n                    display: true,\n                    text: \"날짜\"\n                  }\n                },\n                y: {\n                  beginAtZero: true,\n                  title: {\n                    display: true,\n                    text: \"운동 시간 (분)\"\n                  }\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), exerciseData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: 20\n          },\n          children: [\"\\uBAA9\\uD45C \\uB2EC\\uC131\\uB960: \", calculateAchievementPercentage(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 150,\n            height: 150\n          },\n          children: /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: {\n              labels: [\"소비 칼로리\", \"목표 칼로리\"],\n              datasets: [{\n                label: \"칼로리 소비량\",\n                data: [totalCalories, 1000],\n                // 목표 칼로리 (임시)\n                backgroundColor: [\"#36a2eb\", \"#ff6384\"]\n              }]\n            },\n            options: {\n              plugins: {\n                legend: {\n                  display: true,\n                  position: \"bottom\"\n                }\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"HdkCa+5jTuEv7H+JGKa3F/hj89U=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useEffect","Container","SignupFormContainer","Title","Line","Doughnut","exerciseImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Exercise","_s","exerciseData","setExerciseData","totalCalories","setTotalCalories","fetchData","tempData","time","duration","calories","fetchExerciseData","response","total","reduce","acc","cur","error","console","calculateAchievementPercentage","targetCalories","percentage","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","alignItems","width","src","alt","marginRight","length","height","data","labels","map","datasets","label","fill","borderColor","tension","options","scales","x","type","unit","displayFormats","day","title","text","y","beginAtZero","marginTop","backgroundColor","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport { Line, Doughnut } from \"react-chartjs-2\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\n\nconst Exercise = () => {\n  const [exerciseData, setExerciseData] = useState([]);\n  const [totalCalories, setTotalCalories] = useState(0); // 총 칼로리\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [\n      { time: \"2022-05-01T10:00:00\", duration: 60, calories: 150 },\n      { time: \"2022-05-02T10:00:00\", duration: 40, calories: 100 },\n      { time: \"2022-05-03T10:00:00\", duration: 30, calories: 75 },\n      { time: \"2022-05-04T10:00:00\", duration: 50, calories: 125 },\n    ];\n    return tempData;\n  };\n\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n\n        // 칼로리 합계 계산\n        const total = response.reduce((acc, cur) => acc + cur.calories, 0);\n        setTotalCalories(total);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  const calculateAchievementPercentage = () => {\n    const targetCalories = 1000; // 목표 칼로리 (임시)\n    const percentage = (totalCalories / targetCalories) * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n\n  return (\n    <Container>\n      <SignupFormContainer>\n        <Title>오늘의 활동량</Title>\n        <div style={{ display: \"flex\", alignItems: \"center\", width: \"270px\" }}>\n          <img src={exerciseImage} alt=\"exercise\" style={{ width: 70, marginRight: 5 }} />\n          {exerciseData.length > 0 ? (\n            <div style={{ width: 300, height: 150 }}>\n              <Line\n                data={{\n                  labels: exerciseData.map((data) => data.time),\n                  datasets: [{\n                    label: \"운동 시간 (분)\",\n                    data: exerciseData.map((data) => data.duration),\n                    fill: false,\n                    borderColor: \"rgb(75, 192, 192)\",\n                    tension: 0.1,\n                  }],\n                }}\n                options={{\n                  scales: {\n                    x: {\n                      type: \"time\",\n                      time: {\n                        unit: \"day\",\n                        displayFormats: {\n                          day: \"MM-dd\", // 날짜 형식 수정 (월-일)\n                        },\n                      },\n                      title: {\n                        display: true,\n                        text: \"날짜\",\n                      },\n                    },\n                    y: {\n                      beginAtZero: true,\n                      title: {\n                        display: true,\n                        text: \"운동 시간 (분)\",\n                      },\n                    },\n                  },\n                }}\n              />\n            </div>\n          ) : (\n            <p>데이터를 불러오는 중...</p>\n          )}\n        </div>\n        {/* 목표 달성률 표시 코드 (그래프 아래에 표시) */}\n        {exerciseData.length > 0 && (\n          <>\n            <p style={{ marginTop: 20 }}>목표 달성률: {calculateAchievementPercentage()}%</p>\n            <div style={{ width: 150, height: 150 }}>\n              <Doughnut\n                data={{\n                  labels: [\"소비 칼로리\", \"목표 칼로리\"],\n                  datasets: [{\n                    label: \"칼로리 소비량\",\n                    data: [totalCalories, 1000], // 목표 칼로리 (임시)\n                    backgroundColor: [\"#36a2eb\", \"#ff6384\"],\n                  }],\n                }}\n                options={{\n                  plugins: {\n                    legend: {\n                      display: true,\n                      position: \"bottom\",\n                    },\n                  },\n                }}\n              />\n            </div>\n          </>\n        )}\n      </SignupFormContainer>\n    </Container>\n  );\n};\n\nexport default Exercise;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,mBAAmB,EAAEC,KAAK,QAAQ,uBAAuB;AAC7E,SAASC,IAAI,EAAEC,QAAQ,QAAQ,iBAAiB;AAChD,OAAO,0BAA0B,CAAC,CAAC;AACnC,OAAOC,aAAa,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvD;EACA,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,MAAMC,QAAQ,GAAG,CACf;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAC5D;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,EAC5D;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,EAC3D;MAAEF,IAAI,EAAE,qBAAqB;MAAEC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAC7D;IACD,OAAOH,QAAQ;EACjB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,MAAMsB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAAC,CAAC,CAAC,CAAC;QACpCH,eAAe,CAACS,QAAQ,CAAC,CAAC,CAAC;;QAE3B;QACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,CAACN,QAAQ,EAAE,CAAC,CAAC;QAClEL,gBAAgB,CAACQ,KAAK,CAAC;MACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IAEDN,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAEvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMQ,8BAA8B,GAAGA,CAAA,KAAM;IAC3C,MAAMC,cAAc,GAAG,IAAI,CAAC,CAAC;IAC7B,MAAMC,UAAU,GAAIjB,aAAa,GAAGgB,cAAc,GAAI,GAAG;IACzD,OAAOC,UAAU,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,oBACEzB,OAAA,CAACP,SAAS;IAAAiC,QAAA,eACR1B,OAAA,CAACN,mBAAmB;MAAAgC,QAAA,gBAClB1B,OAAA,CAACL,KAAK;QAAA+B,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB9B,OAAA;QAAK+B,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAR,QAAA,gBACpE1B,OAAA;UAAKmC,GAAG,EAAErC,aAAc;UAACsC,GAAG,EAAC,UAAU;UAACL,KAAK,EAAE;YAAEG,KAAK,EAAE,EAAE;YAAEG,WAAW,EAAE;UAAE;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC/EzB,YAAY,CAACiC,MAAM,GAAG,CAAC,gBACtBtC,OAAA;UAAK+B,KAAK,EAAE;YAAEG,KAAK,EAAE,GAAG;YAAEK,MAAM,EAAE;UAAI,CAAE;UAAAb,QAAA,eACtC1B,OAAA,CAACJ,IAAI;YACH4C,IAAI,EAAE;cACJC,MAAM,EAAEpC,YAAY,CAACqC,GAAG,CAAEF,IAAI,IAAKA,IAAI,CAAC7B,IAAI,CAAC;cAC7CgC,QAAQ,EAAE,CAAC;gBACTC,KAAK,EAAE,WAAW;gBAClBJ,IAAI,EAAEnC,YAAY,CAACqC,GAAG,CAAEF,IAAI,IAAKA,IAAI,CAAC5B,QAAQ,CAAC;gBAC/CiC,IAAI,EAAE,KAAK;gBACXC,WAAW,EAAE,mBAAmB;gBAChCC,OAAO,EAAE;cACX,CAAC;YACH,CAAE;YACFC,OAAO,EAAE;cACPC,MAAM,EAAE;gBACNC,CAAC,EAAE;kBACDC,IAAI,EAAE,MAAM;kBACZxC,IAAI,EAAE;oBACJyC,IAAI,EAAE,KAAK;oBACXC,cAAc,EAAE;sBACdC,GAAG,EAAE,OAAO,CAAE;oBAChB;kBACF,CAAC;kBACDC,KAAK,EAAE;oBACLvB,OAAO,EAAE,IAAI;oBACbwB,IAAI,EAAE;kBACR;gBACF,CAAC;gBACDC,CAAC,EAAE;kBACDC,WAAW,EAAE,IAAI;kBACjBH,KAAK,EAAE;oBACLvB,OAAO,EAAE,IAAI;oBACbwB,IAAI,EAAE;kBACR;gBACF;cACF;YACF;UAAE;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN9B,OAAA;UAAA0B,QAAA,EAAG;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACrB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EAELzB,YAAY,CAACiC,MAAM,GAAG,CAAC,iBACtBtC,OAAA,CAAAE,SAAA;QAAAwB,QAAA,gBACE1B,OAAA;UAAG+B,KAAK,EAAE;YAAE4B,SAAS,EAAE;UAAG,CAAE;UAAAjC,QAAA,GAAC,mCAAQ,EAACJ,8BAA8B,CAAC,CAAC,EAAC,GAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC5E9B,OAAA;UAAK+B,KAAK,EAAE;YAAEG,KAAK,EAAE,GAAG;YAAEK,MAAM,EAAE;UAAI,CAAE;UAAAb,QAAA,eACtC1B,OAAA,CAACH,QAAQ;YACP2C,IAAI,EAAE;cACJC,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;cAC5BE,QAAQ,EAAE,CAAC;gBACTC,KAAK,EAAE,SAAS;gBAChBJ,IAAI,EAAE,CAACjC,aAAa,EAAE,IAAI,CAAC;gBAAE;gBAC7BqD,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS;cACxC,CAAC;YACH,CAAE;YACFZ,OAAO,EAAE;cACPa,OAAO,EAAE;gBACPC,MAAM,EAAE;kBACN9B,OAAO,EAAE,IAAI;kBACb+B,QAAQ,EAAE;gBACZ;cACF;YACF;UAAE;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACkB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEhB,CAAC;AAAC1B,EAAA,CAtHID,QAAQ;AAAA6D,EAAA,GAAR7D,QAAQ;AAwHd,eAAeA,QAAQ;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}