{"ast":null,"code":"var _jsxFileName = \"/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const [exerciseData, setExerciseData] = useState([]);\n  const [totalCalories, setTotalCalories] = useState(0); // 총 칼로리\n  const chartRef = useRef(null); // 라인 차트를 저장할 ref\n  const doughnutRef = useRef(null); // 원 그래프를 저장할 ref\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [{\n      time: \"2022-05-01T10:00:00\",\n      duration: 60,\n      calories: 150\n    }, {\n      time: \"2022-05-02T10:00:00\",\n      duration: 40,\n      calories: 100\n    }, {\n      time: \"2022-05-03T10:00:00\",\n      duration: 30,\n      calories: 75\n    }, {\n      time: \"2022-05-04T10:00:00\",\n      duration: 50,\n      calories: 125\n    }];\n    return tempData;\n  };\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n\n        // 칼로리 합계 계산\n        const total = response.reduce((acc, cur) => acc + cur.calories, 0);\n        setTotalCalories(total);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  useEffect(() => {\n    // exerciseData가 변경될 때마다 실행되는 useEffect\n    if (exerciseData.length > 0) {\n      // 라인 차트 생성\n      const ctx = document.getElementById(\"exerciseChart\");\n      if (chartRef.current) {\n        chartRef.current.destroy(); // 이전 차트 제거\n      }\n      chartRef.current = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: exerciseData.map(data => data.time),\n          datasets: [{\n            label: \"운동 시간 (분)\",\n            data: exerciseData.map(data => data.duration),\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            tension: 0.1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"day\",\n                displayFormats: {\n                  day: \"MM-dd\" // 날짜 형식 수정 (월-일)\n                }\n              },\n              title: {\n                display: true,\n                text: \"날짜\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"운동 시간 (분)\"\n              }\n            }\n          }\n        }\n      });\n\n      // 원 그래프 생성\n      const doughnutCtx = document.getElementById(\"caloriesChart\");\n      if (doughnutRef.current) {\n        doughnutRef.current.destroy(); // 이전 차트 제거\n      }\n      doughnutRef.current = new Chart(doughnutCtx, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"소비 칼로리\", \"목표 칼로리\"],\n          datasets: [{\n            label: \"칼로리 소비량\",\n            data: [totalCalories, 1000],\n            // 목표 칼로리 (임시)\n            backgroundColor: [\"#36a2eb\", \"#ff6384\"]\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: \"bottom\"\n            }\n          }\n        }\n      });\n    }\n  }, [exerciseData, totalCalories]); // exerciseData 또는 totalCalories가 변경될 때마다 실행\n\n  const calculateAchievementPercentage = () => {\n    const targetCalories = 1000; // 목표 칼로리 (임시)\n    const percentage = totalCalories / targetCalories * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignupFormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC624\\uB298\\uC758 \\uD65C\\uB3D9\\uB7C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          width: \"270px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: exerciseImage,\n          alt: \"exercise\",\n          style: {\n            width: 70,\n            marginRight: 5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), exerciseData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 300,\n            height: 150\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"exerciseChart\",\n            width: 300,\n            height: 150\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), exerciseData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: 20\n          },\n          children: [\"\\uBAA9\\uD45C \\uB2EC\\uC131\\uB960: \", calculateAchievementPercentage(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            width: 250,\n            height: 250,\n            marginTop: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"caloriesChart\",\n            width: 200,\n            height: 200,\n            alignItems: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"k8k9VUG3SmJUwYVL+aJ29vwoMr8=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","SignupFormContainer","Title","Chart","exerciseImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Exercise","_s","exerciseData","setExerciseData","totalCalories","setTotalCalories","chartRef","doughnutRef","fetchData","tempData","time","duration","calories","fetchExerciseData","response","total","reduce","acc","cur","error","console","length","ctx","document","getElementById","current","destroy","type","data","labels","map","datasets","label","fill","borderColor","tension","options","scales","x","unit","displayFormats","day","title","display","text","y","beginAtZero","doughnutCtx","backgroundColor","plugins","legend","position","calculateAchievementPercentage","targetCalories","percentage","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","style","alignItems","width","src","alt","marginRight","height","id","marginTop","justifyContent","_c","$RefreshReg$"],"sources":["/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\nimport \"chartjs-adapter-date-fns\"; // Chart.js의 Date Adapter 추가\nimport exerciseImage from \"../styles/exercise.png\"; // 이미지 import\n\nconst Exercise = () => {\n  const [exerciseData, setExerciseData] = useState([]);\n  const [totalCalories, setTotalCalories] = useState(0); // 총 칼로리\n  const chartRef = useRef(null); // 라인 차트를 저장할 ref\n  const doughnutRef = useRef(null); // 원 그래프를 저장할 ref\n\n  // 데이터를 불러오는 비동기 함수\n  const fetchData = async () => {\n    // 임시 데이터 (실제로는 API 호출 등으로 데이터를 가져와야 함)\n    const tempData = [\n      { time: \"2022-05-01T10:00:00\", duration: 60, calories: 150 },\n      { time: \"2022-05-02T10:00:00\", duration: 40, calories: 100 },\n      { time: \"2022-05-03T10:00:00\", duration: 30, calories: 75 },\n      { time: \"2022-05-04T10:00:00\", duration: 50, calories: 125 },\n    ];\n    return tempData;\n  };\n\n  useEffect(() => {\n    const fetchExerciseData = async () => {\n      try {\n        const response = await fetchData(); // 데이터를 불러오는 비동기 함수 호출\n        setExerciseData(response); // 불러온 데이터를 상태에 저장\n\n        // 칼로리 합계 계산\n        const total = response.reduce((acc, cur) => acc + cur.calories, 0);\n        setTotalCalories(total);\n      } catch (error) {\n        console.error(\"데이터 불러오기 오류:\", error);\n      }\n    };\n\n    fetchExerciseData(); // 데이터를 불러오는 함수 호출\n\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행\n\n  useEffect(() => {\n    // exerciseData가 변경될 때마다 실행되는 useEffect\n    if (exerciseData.length > 0) {\n      // 라인 차트 생성\n      const ctx = document.getElementById(\"exerciseChart\");\n      if (chartRef.current) {\n        chartRef.current.destroy(); // 이전 차트 제거\n      }\n      chartRef.current = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: exerciseData.map((data) => data.time),\n          datasets: [{\n            label: \"운동 시간 (분)\",\n            data: exerciseData.map((data) => data.duration),\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            tension: 0.1,\n          }],\n        },\n        options: {\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"day\",\n                displayFormats: {\n                  day: \"MM-dd\", // 날짜 형식 수정 (월-일)\n                },\n              },\n              title: {\n                display: true,\n                text: \"날짜\",\n              },\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"운동 시간 (분)\",\n              },\n            },\n          },\n        },\n      });\n\n      // 원 그래프 생성\n      const doughnutCtx = document.getElementById(\"caloriesChart\");\n      if (doughnutRef.current) {\n        doughnutRef.current.destroy(); // 이전 차트 제거\n      }\n      doughnutRef.current = new Chart(doughnutCtx, {\n        type: \"doughnut\",\n        data: {\n          labels: [\"소비 칼로리\", \"목표 칼로리\"],\n          datasets: [{\n            label: \"칼로리 소비량\",\n            data: [totalCalories, 1000], // 목표 칼로리 (임시)\n            backgroundColor: [\"#36a2eb\", \"#ff6384\"],\n          }],\n        },\n        options: {\n          plugins: {\n            legend: {\n              display: true,\n              position: \"bottom\",\n            },\n          },\n        },\n      });\n    }\n  }, [exerciseData, totalCalories]); // exerciseData 또는 totalCalories가 변경될 때마다 실행\n\n  const calculateAchievementPercentage = () => {\n    const targetCalories = 1000; // 목표 칼로리 (임시)\n    const percentage = (totalCalories / targetCalories) * 100;\n    return percentage.toFixed(2); // 소수점 2자리까지 표시\n  };\n\n  return (\n    <Container>\n      <SignupFormContainer>\n        <Title>오늘의 활동량</Title>\n        <div style={{ display: \"flex\", alignItems: \"center\", width: \"270px\" }}>\n          <img src={exerciseImage} alt=\"exercise\" style={{ width: 70, marginRight: 5 }} />\n          {exerciseData.length > 0 ? (\n            <div style={{ width: 300, height: 150 }}>\n              <canvas id=\"exerciseChart\" width={300} height={150}></canvas>\n            </div>\n          ) : (\n            <p>데이터를 불러오는 중...</p>\n          )}\n        </div>\n        {/* 목표 달성률 표시 코드 (그래프 아래에 표시) */}\n        {exerciseData.length > 0 && (\n          <>\n            <p style={{ marginTop: 20 }}>목표 달성률: {calculateAchievementPercentage()}%</p>\n            <div style={{display: \"flex\", justifyContent: \"center\" , width: 250, height: 250 , marginTop: 20 }}>\n              <canvas id=\"caloriesChart\" width={200} height={200} alignItems=\"center\"></canvas>\n            </div>\n          </>\n        )}\n      </SignupFormContainer>\n    </Container>\n  );\n};\n\nexport default Exercise;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}