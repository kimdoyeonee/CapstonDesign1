{"ast":null,"code":"var _jsxFileName = \"/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercise = () => {\n  _s();\n  const [exerciseData, setExerciseData] = useState([]);\n  const fetchExerciseData = () => {\n    const tempData = [{\n      time: \"2022-05-01 10:00\",\n      duration: 60\n    }, {\n      time: \"2022-05-01 12:00\",\n      duration: 45\n    }, {\n      time: \"2022-05-01 15:00\",\n      duration: 30\n    }];\n    setExerciseData(tempData);\n  };\n  useEffect(() => {\n    fetchExerciseData();\n  }, []); // 컴포넌트가 마운트될 때 한 번만 데이터를 가져옵니다.\n\n  useEffect(() => {\n    const ctx = document.getElementById(\"exerciseChart\");\n    if (ctx && exerciseData.length > 0) {\n      const chart = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: exerciseData.map(data => data.time),\n          datasets: [{\n            label: \"운동 시간 (분)\",\n            data: exerciseData.map(data => data.duration),\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            tension: 0.1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"hour\",\n                displayFormats: {\n                  hour: \"YYYY-MM-DD HH:mm\"\n                }\n              },\n              title: {\n                display: true,\n                text: \"시간\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"운동 시간 (분)\"\n              }\n            }\n          }\n        }\n      });\n      return () => {\n        chart.destroy();\n      };\n    }\n  }, [exerciseData]); // exerciseData가 업데이트될 때마다 차트를 다시 생성합니다.\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(SignupFormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uC6B4\\uB3D9 \\uB370\\uC774\\uD130 \\uC870\\uD68C \\uBC0F \\uADF8\\uB798\\uD504\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"exerciseChart\",\n          width: \"400\",\n          height: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercise, \"YU0lFXwvIW+aCQZeTUbfAUf7l0Q=\");\n_c = Exercise;\nexport default Exercise;\nvar _c;\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"names":["React","useState","useEffect","Container","SignupFormContainer","Title","Chart","jsxDEV","_jsxDEV","Exercise","_s","exerciseData","setExerciseData","fetchExerciseData","tempData","time","duration","ctx","document","getElementById","length","chart","type","data","labels","map","datasets","label","fill","borderColor","tension","options","scales","x","unit","displayFormats","hour","title","display","text","y","beginAtZero","destroy","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/Users/kimdoyeon/Desktop/CapstonDesign1/src/pages/exercise.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, SignupFormContainer, Title } from \"../styles/SignupStyle\";\nimport Chart from \"chart.js/auto\";\n\nconst Exercise = () => {\n  const [exerciseData, setExerciseData] = useState([]);\n\n  const fetchExerciseData = () => {\n    const tempData = [\n      { time: \"2022-05-01 10:00\", duration: 60 },\n      { time: \"2022-05-01 12:00\", duration: 45 },\n      { time: \"2022-05-01 15:00\", duration: 30 },\n    ];\n    setExerciseData(tempData);\n  };\n\n  useEffect(() => {\n    fetchExerciseData();\n  }, []); // 컴포넌트가 마운트될 때 한 번만 데이터를 가져옵니다.\n\n  useEffect(() => {\n    const ctx = document.getElementById(\"exerciseChart\");\n\n    if (ctx && exerciseData.length > 0) {\n      const chart = new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: exerciseData.map((data) => data.time),\n          datasets: [{\n            label: \"운동 시간 (분)\",\n            data: exerciseData.map((data) => data.duration),\n            fill: false,\n            borderColor: \"rgb(75, 192, 192)\",\n            tension: 0.1,\n          }],\n        },\n        options: {\n          scales: {\n            x: {\n              type: \"time\",\n              time: {\n                unit: \"hour\",\n                displayFormats: {\n                  hour: \"YYYY-MM-DD HH:mm\",\n                },\n              },\n              title: {\n                display: true,\n                text: \"시간\",\n              },\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: \"운동 시간 (분)\",\n              },\n            },\n          },\n        },\n      });\n\n      return () => {\n        chart.destroy();\n      };\n    }\n  }, [exerciseData]); // exerciseData가 업데이트될 때마다 차트를 다시 생성합니다.\n\n  return (\n    <Container>\n      <SignupFormContainer>\n        <Title>운동 데이터 조회 및 그래프</Title>\n        <div>\n          <canvas id=\"exerciseChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n      </SignupFormContainer>\n    </Container>\n  );\n};\n\nexport default Exercise;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}